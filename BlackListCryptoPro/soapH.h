/* soapH.h
   Generated by gSOAP 2.8.17r from wsdl.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_byte(soap, data),0) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_int(soap, data),0) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_LONG64
#define SOAP_TYPE_LONG64 (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_LONG64(struct soap*, LONG64 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_LONG64(struct soap*, const char*, int, const LONG64 *, const char*);
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_in_LONG64(struct soap*, const char*, LONG64 *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_LONG64(struct soap*, const LONG64 *, const char*, const char*);

#ifndef soap_write_LONG64
#define soap_write_LONG64(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_LONG64(soap, data),0) || soap_put_LONG64(soap, data, "long", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_LONG64(struct soap*, LONG64 *, const char*, const char*);

#ifndef soap_read_LONG64
#define soap_read_LONG64(soap, data) ( soap_begin_recv(soap) || !soap_get_LONG64(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_unsignedByte
#define SOAP_TYPE_unsignedByte (9)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedByte(struct soap*, unsigned char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_unsignedByte(struct soap*, const char*, unsigned char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedByte(struct soap*, const unsigned char *, const char*, const char*);

#ifndef soap_write_unsignedByte
#define soap_write_unsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_unsignedByte(soap, data),0) || soap_put_unsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_unsignedByte(struct soap*, unsigned char *, const char*, const char*);

#ifndef soap_read_unsignedByte
#define soap_read_unsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_unsignedInt
#define SOAP_TYPE_unsignedInt (8)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedInt(struct soap*, unsigned int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);

#ifndef soap_write_unsignedInt
#define soap_write_unsignedInt(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_unsignedInt(soap, data),0) || soap_put_unsignedInt(soap, data, "unsignedInt", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);

#ifndef soap_read_unsignedInt
#define soap_read_unsignedInt(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedInt(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_bool
#define SOAP_TYPE_bool (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_bool(struct soap*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap*, const char*, int, const bool *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap*, const char*, bool *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap*, const char*, bool *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap*, const bool *, const char*, const char*);

#ifndef soap_write_bool
#define soap_write_bool(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_bool(soap, data),0) || soap_put_bool(soap, data, "boolean", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap*, bool *, const char*, const char*);

#ifndef soap_read_bool
#define soap_read_bool(soap, data) ( soap_begin_recv(soap) || !soap_get_bool(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__ns1__getResultResponse
#define SOAP_TYPE__ns1__getResultResponse (17)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getResultResponse(struct soap*, const char*, int, const _ns1__getResultResponse *, const char*);
SOAP_FMAC3 _ns1__getResultResponse * SOAP_FMAC4 soap_in__ns1__getResultResponse(struct soap*, const char*, _ns1__getResultResponse *, const char*);

#ifndef soap_write__ns1__getResultResponse
#define soap_write__ns1__getResultResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:getResultResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__getResultResponse * SOAP_FMAC4 soap_get__ns1__getResultResponse(struct soap*, _ns1__getResultResponse *, const char*, const char*);

#ifndef soap_read__ns1__getResultResponse
#define soap_read__ns1__getResultResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getResultResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__getResultResponse * SOAP_FMAC2 soap_instantiate__ns1__getResultResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__getResultResponse * soap_new__ns1__getResultResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__getResultResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__getResultResponse * soap_new_req__ns1__getResultResponse(struct soap *soap, bool result) { _ns1__getResultResponse *_p = soap_instantiate__ns1__getResultResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__getResultResponse::result = result; } return _p; }

inline _ns1__getResultResponse * soap_new_set__ns1__getResultResponse(struct soap *soap, bool result, char *resultComment, xsd__base64Binary *registerZipArchive) { _ns1__getResultResponse *_p = soap_instantiate__ns1__getResultResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__getResultResponse::result = result; _p->_ns1__getResultResponse::resultComment = resultComment; _p->_ns1__getResultResponse::registerZipArchive = registerZipArchive; } return _p; }

inline void soap_delete__ns1__getResultResponse(struct soap *soap, _ns1__getResultResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getResultResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getResult
#define SOAP_TYPE__ns1__getResult (16)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getResult(struct soap*, const char*, int, const _ns1__getResult *, const char*);
SOAP_FMAC3 _ns1__getResult * SOAP_FMAC4 soap_in__ns1__getResult(struct soap*, const char*, _ns1__getResult *, const char*);

#ifndef soap_write__ns1__getResult
#define soap_write__ns1__getResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:getResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__getResult * SOAP_FMAC4 soap_get__ns1__getResult(struct soap*, _ns1__getResult *, const char*, const char*);

#ifndef soap_read__ns1__getResult
#define soap_read__ns1__getResult(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__getResult * SOAP_FMAC2 soap_instantiate__ns1__getResult(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__getResult * soap_new__ns1__getResult(struct soap *soap, int n = -1) { return soap_instantiate__ns1__getResult(soap, n, NULL, NULL, NULL); }

inline _ns1__getResult * soap_new_req__ns1__getResult(struct soap *soap, char *code) { _ns1__getResult *_p = soap_instantiate__ns1__getResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__getResult::code = code; } return _p; }

inline _ns1__getResult * soap_new_set__ns1__getResult(struct soap *soap, char *code) { _ns1__getResult *_p = soap_instantiate__ns1__getResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__getResult::code = code; } return _p; }

inline void soap_delete__ns1__getResult(struct soap *soap, _ns1__getResult *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__sendRequestResponse
#define SOAP_TYPE__ns1__sendRequestResponse (15)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__sendRequestResponse(struct soap*, const char*, int, const _ns1__sendRequestResponse *, const char*);
SOAP_FMAC3 _ns1__sendRequestResponse * SOAP_FMAC4 soap_in__ns1__sendRequestResponse(struct soap*, const char*, _ns1__sendRequestResponse *, const char*);

#ifndef soap_write__ns1__sendRequestResponse
#define soap_write__ns1__sendRequestResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:sendRequestResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__sendRequestResponse * SOAP_FMAC4 soap_get__ns1__sendRequestResponse(struct soap*, _ns1__sendRequestResponse *, const char*, const char*);

#ifndef soap_read__ns1__sendRequestResponse
#define soap_read__ns1__sendRequestResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__sendRequestResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__sendRequestResponse * SOAP_FMAC2 soap_instantiate__ns1__sendRequestResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__sendRequestResponse * soap_new__ns1__sendRequestResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__sendRequestResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__sendRequestResponse * soap_new_req__ns1__sendRequestResponse(struct soap *soap, bool result) { _ns1__sendRequestResponse *_p = soap_instantiate__ns1__sendRequestResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__sendRequestResponse::result = result; } return _p; }

inline _ns1__sendRequestResponse * soap_new_set__ns1__sendRequestResponse(struct soap *soap, bool result, char *resultComment, char *code) { _ns1__sendRequestResponse *_p = soap_instantiate__ns1__sendRequestResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__sendRequestResponse::result = result; _p->_ns1__sendRequestResponse::resultComment = resultComment; _p->_ns1__sendRequestResponse::code = code; } return _p; }

inline void soap_delete__ns1__sendRequestResponse(struct soap *soap, _ns1__sendRequestResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__sendRequestResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__sendRequest
#define SOAP_TYPE__ns1__sendRequest (14)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__sendRequest(struct soap*, const char*, int, const _ns1__sendRequest *, const char*);
SOAP_FMAC3 _ns1__sendRequest * SOAP_FMAC4 soap_in__ns1__sendRequest(struct soap*, const char*, _ns1__sendRequest *, const char*);

#ifndef soap_write__ns1__sendRequest
#define soap_write__ns1__sendRequest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:sendRequest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__sendRequest * SOAP_FMAC4 soap_get__ns1__sendRequest(struct soap*, _ns1__sendRequest *, const char*, const char*);

#ifndef soap_read__ns1__sendRequest
#define soap_read__ns1__sendRequest(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__sendRequest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__sendRequest * SOAP_FMAC2 soap_instantiate__ns1__sendRequest(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__sendRequest * soap_new__ns1__sendRequest(struct soap *soap, int n = -1) { return soap_instantiate__ns1__sendRequest(soap, n, NULL, NULL, NULL); }

inline _ns1__sendRequest * soap_new_req__ns1__sendRequest(struct soap *soap, xsd__base64Binary& requestFile, xsd__base64Binary& signatureFile) { _ns1__sendRequest *_p = soap_instantiate__ns1__sendRequest(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__sendRequest::requestFile = requestFile; _p->_ns1__sendRequest::signatureFile = signatureFile; } return _p; }

inline _ns1__sendRequest * soap_new_set__ns1__sendRequest(struct soap *soap, xsd__base64Binary& requestFile, xsd__base64Binary& signatureFile) { _ns1__sendRequest *_p = soap_instantiate__ns1__sendRequest(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__sendRequest::requestFile = requestFile; _p->_ns1__sendRequest::signatureFile = signatureFile; } return _p; }

inline void soap_delete__ns1__sendRequest(struct soap *soap, _ns1__sendRequest *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__sendRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getLastDumpDateResponse
#define SOAP_TYPE__ns1__getLastDumpDateResponse (13)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getLastDumpDateResponse(struct soap*, const char*, int, const _ns1__getLastDumpDateResponse *, const char*);
SOAP_FMAC3 _ns1__getLastDumpDateResponse * SOAP_FMAC4 soap_in__ns1__getLastDumpDateResponse(struct soap*, const char*, _ns1__getLastDumpDateResponse *, const char*);

#ifndef soap_write__ns1__getLastDumpDateResponse
#define soap_write__ns1__getLastDumpDateResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:getLastDumpDateResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__getLastDumpDateResponse * SOAP_FMAC4 soap_get__ns1__getLastDumpDateResponse(struct soap*, _ns1__getLastDumpDateResponse *, const char*, const char*);

#ifndef soap_read__ns1__getLastDumpDateResponse
#define soap_read__ns1__getLastDumpDateResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getLastDumpDateResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__getLastDumpDateResponse * SOAP_FMAC2 soap_instantiate__ns1__getLastDumpDateResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__getLastDumpDateResponse * soap_new__ns1__getLastDumpDateResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__getLastDumpDateResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__getLastDumpDateResponse * soap_new_req__ns1__getLastDumpDateResponse(struct soap *soap, LONG64 lastDumpDate) { _ns1__getLastDumpDateResponse *_p = soap_instantiate__ns1__getLastDumpDateResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__getLastDumpDateResponse::lastDumpDate = lastDumpDate; } return _p; }

inline _ns1__getLastDumpDateResponse * soap_new_set__ns1__getLastDumpDateResponse(struct soap *soap, LONG64 lastDumpDate) { _ns1__getLastDumpDateResponse *_p = soap_instantiate__ns1__getLastDumpDateResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__getLastDumpDateResponse::lastDumpDate = lastDumpDate; } return _p; }

inline void soap_delete__ns1__getLastDumpDateResponse(struct soap *soap, _ns1__getLastDumpDateResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getLastDumpDateResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getLastDumpDate
#define SOAP_TYPE__ns1__getLastDumpDate (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getLastDumpDate(struct soap*, const char*, int, const _ns1__getLastDumpDate *, const char*);
SOAP_FMAC3 _ns1__getLastDumpDate * SOAP_FMAC4 soap_in__ns1__getLastDumpDate(struct soap*, const char*, _ns1__getLastDumpDate *, const char*);

#ifndef soap_write__ns1__getLastDumpDate
#define soap_write__ns1__getLastDumpDate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:getLastDumpDate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__getLastDumpDate * SOAP_FMAC4 soap_get__ns1__getLastDumpDate(struct soap*, _ns1__getLastDumpDate *, const char*, const char*);

#ifndef soap_read__ns1__getLastDumpDate
#define soap_read__ns1__getLastDumpDate(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getLastDumpDate(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__getLastDumpDate * SOAP_FMAC2 soap_instantiate__ns1__getLastDumpDate(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__getLastDumpDate * soap_new__ns1__getLastDumpDate(struct soap *soap, int n = -1) { return soap_instantiate__ns1__getLastDumpDate(soap, n, NULL, NULL, NULL); }

inline _ns1__getLastDumpDate * soap_new_req__ns1__getLastDumpDate(struct soap *soap) { _ns1__getLastDumpDate *_p = soap_instantiate__ns1__getLastDumpDate(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__getLastDumpDate * soap_new_set__ns1__getLastDumpDate(struct soap *soap) { _ns1__getLastDumpDate *_p = soap_instantiate__ns1__getLastDumpDate(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__ns1__getLastDumpDate(struct soap *soap, _ns1__getLastDumpDate *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getLastDumpDate(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (7)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__base64Binary(struct soap*, const char*, int, const xsd__base64Binary *, const char*);
SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_in_xsd__base64Binary(struct soap*, const char*, xsd__base64Binary *, const char*);

#ifndef soap_write_xsd__base64Binary
#define soap_write_xsd__base64Binary(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "xsd:base64Binary", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_get_xsd__base64Binary(struct soap*, xsd__base64Binary *, const char*, const char*);

#ifndef soap_read_xsd__base64Binary
#define soap_read_xsd__base64Binary(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__base64Binary(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 xsd__base64Binary * SOAP_FMAC2 soap_instantiate_xsd__base64Binary(struct soap*, int, const char*, const char*, size_t*);

inline xsd__base64Binary * soap_new_xsd__base64Binary(struct soap *soap, int n = -1) { return soap_instantiate_xsd__base64Binary(soap, n, NULL, NULL, NULL); }

inline xsd__base64Binary * soap_new_req_xsd__base64Binary(struct soap *soap) { xsd__base64Binary *_p = soap_instantiate_xsd__base64Binary(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline xsd__base64Binary * soap_new_set_xsd__base64Binary(struct soap *soap, unsigned char *__ptr, int __size, char *id, char *type, char *options) { xsd__base64Binary *_p = soap_instantiate_xsd__base64Binary(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__base64Binary::__ptr = __ptr; _p->xsd__base64Binary::__size = __size; _p->xsd__base64Binary::id = id; _p->xsd__base64Binary::type = type; _p->xsd__base64Binary::options = options; } return _p; }

inline void soap_delete_xsd__base64Binary(struct soap *soap, xsd__base64Binary *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__base64Binary(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data),0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(struct soap *soap) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); } return _p; }

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(struct soap *soap, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); _p->faultcode = faultcode; _p->faultstring = faultstring; _p->faultactor = faultactor; _p->detail = detail; _p->SOAP_ENV__Code = SOAP_ENV__Code; _p->SOAP_ENV__Reason = SOAP_ENV__Reason; _p->SOAP_ENV__Node = SOAP_ENV__Node; _p->SOAP_ENV__Role = SOAP_ENV__Role; _p->SOAP_ENV__Detail = SOAP_ENV__Detail; } return _p; }

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data),0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(struct soap *soap) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); } return _p; }

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); _p->SOAP_ENV__Text = SOAP_ENV__Text; } return _p; }

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data),0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__type = __type; _p->fault = fault; } return _p; }

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(struct soap *soap, char *__any, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__any = __any; _p->__type = __type; _p->fault = fault; } return _p; }

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data),0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(struct soap *soap) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); } return _p; }

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value, struct SOAP_ENV__Code *SOAP_ENV__Subcode) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); _p->SOAP_ENV__Value = SOAP_ENV__Value; _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode; } return _p; }

inline void soap_delete_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data),0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline void soap_delete_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE___ns1__getResult
#define SOAP_TYPE___ns1__getResult (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getResult(struct soap*, struct __ns1__getResult *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getResult(struct soap*, const struct __ns1__getResult *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getResult(struct soap*, const char*, int, const struct __ns1__getResult *, const char*);
SOAP_FMAC3 struct __ns1__getResult * SOAP_FMAC4 soap_in___ns1__getResult(struct soap*, const char*, struct __ns1__getResult *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getResult(struct soap*, const struct __ns1__getResult *, const char*, const char*);

#ifndef soap_write___ns1__getResult
#define soap_write___ns1__getResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__getResult(soap, data),0) || soap_put___ns1__getResult(soap, data, "-ns1:getResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__getResult * SOAP_FMAC4 soap_get___ns1__getResult(struct soap*, struct __ns1__getResult *, const char*, const char*);

#ifndef soap_read___ns1__getResult
#define soap_read___ns1__getResult(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__getResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__getResult * SOAP_FMAC2 soap_instantiate___ns1__getResult(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__getResult * soap_new___ns1__getResult(struct soap *soap, int n = -1) { return soap_instantiate___ns1__getResult(soap, n, NULL, NULL, NULL); }

inline struct __ns1__getResult * soap_new_req___ns1__getResult(struct soap *soap) { struct __ns1__getResult *_p = soap_instantiate___ns1__getResult(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__getResult(soap, _p); } return _p; }

inline struct __ns1__getResult * soap_new_set___ns1__getResult(struct soap *soap, _ns1__getResult *ns1__getResult) { struct __ns1__getResult *_p = soap_instantiate___ns1__getResult(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__getResult(soap, _p); _p->ns1__getResult = ns1__getResult; } return _p; }

inline void soap_delete___ns1__getResult(struct soap *soap, struct __ns1__getResult *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__getResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__sendRequest
#define SOAP_TYPE___ns1__sendRequest (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__sendRequest(struct soap*, struct __ns1__sendRequest *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__sendRequest(struct soap*, const struct __ns1__sendRequest *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__sendRequest(struct soap*, const char*, int, const struct __ns1__sendRequest *, const char*);
SOAP_FMAC3 struct __ns1__sendRequest * SOAP_FMAC4 soap_in___ns1__sendRequest(struct soap*, const char*, struct __ns1__sendRequest *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__sendRequest(struct soap*, const struct __ns1__sendRequest *, const char*, const char*);

#ifndef soap_write___ns1__sendRequest
#define soap_write___ns1__sendRequest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__sendRequest(soap, data),0) || soap_put___ns1__sendRequest(soap, data, "-ns1:sendRequest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__sendRequest * SOAP_FMAC4 soap_get___ns1__sendRequest(struct soap*, struct __ns1__sendRequest *, const char*, const char*);

#ifndef soap_read___ns1__sendRequest
#define soap_read___ns1__sendRequest(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__sendRequest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__sendRequest * SOAP_FMAC2 soap_instantiate___ns1__sendRequest(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__sendRequest * soap_new___ns1__sendRequest(struct soap *soap, int n = -1) { return soap_instantiate___ns1__sendRequest(soap, n, NULL, NULL, NULL); }

inline struct __ns1__sendRequest * soap_new_req___ns1__sendRequest(struct soap *soap) { struct __ns1__sendRequest *_p = soap_instantiate___ns1__sendRequest(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__sendRequest(soap, _p); } return _p; }

inline struct __ns1__sendRequest * soap_new_set___ns1__sendRequest(struct soap *soap, _ns1__sendRequest *ns1__sendRequest) { struct __ns1__sendRequest *_p = soap_instantiate___ns1__sendRequest(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__sendRequest(soap, _p); _p->ns1__sendRequest = ns1__sendRequest; } return _p; }

inline void soap_delete___ns1__sendRequest(struct soap *soap, struct __ns1__sendRequest *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__sendRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__getLastDumpDate
#define SOAP_TYPE___ns1__getLastDumpDate (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getLastDumpDate(struct soap*, struct __ns1__getLastDumpDate *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getLastDumpDate(struct soap*, const struct __ns1__getLastDumpDate *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getLastDumpDate(struct soap*, const char*, int, const struct __ns1__getLastDumpDate *, const char*);
SOAP_FMAC3 struct __ns1__getLastDumpDate * SOAP_FMAC4 soap_in___ns1__getLastDumpDate(struct soap*, const char*, struct __ns1__getLastDumpDate *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getLastDumpDate(struct soap*, const struct __ns1__getLastDumpDate *, const char*, const char*);

#ifndef soap_write___ns1__getLastDumpDate
#define soap_write___ns1__getLastDumpDate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__getLastDumpDate(soap, data),0) || soap_put___ns1__getLastDumpDate(soap, data, "-ns1:getLastDumpDate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__getLastDumpDate * SOAP_FMAC4 soap_get___ns1__getLastDumpDate(struct soap*, struct __ns1__getLastDumpDate *, const char*, const char*);

#ifndef soap_read___ns1__getLastDumpDate
#define soap_read___ns1__getLastDumpDate(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__getLastDumpDate(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__getLastDumpDate * SOAP_FMAC2 soap_instantiate___ns1__getLastDumpDate(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__getLastDumpDate * soap_new___ns1__getLastDumpDate(struct soap *soap, int n = -1) { return soap_instantiate___ns1__getLastDumpDate(soap, n, NULL, NULL, NULL); }

inline struct __ns1__getLastDumpDate * soap_new_req___ns1__getLastDumpDate(struct soap *soap) { struct __ns1__getLastDumpDate *_p = soap_instantiate___ns1__getLastDumpDate(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__getLastDumpDate(soap, _p); } return _p; }

inline struct __ns1__getLastDumpDate * soap_new_set___ns1__getLastDumpDate(struct soap *soap, _ns1__getLastDumpDate *ns1__getLastDumpDate) { struct __ns1__getLastDumpDate *_p = soap_instantiate___ns1__getLastDumpDate(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__getLastDumpDate(soap, _p); _p->ns1__getLastDumpDate = ns1__getLastDumpDate; } return _p; }

inline void soap_delete___ns1__getLastDumpDate(struct soap *soap, struct __ns1__getLastDumpDate *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__getLastDumpDate(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data),0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data),0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data),0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTo_ns1__getResultResponse
#define SOAP_TYPE_PointerTo_ns1__getResultResponse (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getResultResponse(struct soap*, _ns1__getResultResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getResultResponse(struct soap*, const char *, int, _ns1__getResultResponse *const*, const char *);
SOAP_FMAC3 _ns1__getResultResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__getResultResponse(struct soap*, const char*, _ns1__getResultResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getResultResponse(struct soap*, _ns1__getResultResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__getResultResponse
#define soap_write_PointerTo_ns1__getResultResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getResultResponse(soap, data),0) || soap_put_PointerTo_ns1__getResultResponse(soap, data, "ns1:getResultResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__getResultResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__getResultResponse(struct soap*, _ns1__getResultResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getResultResponse
#define soap_read_PointerTo_ns1__getResultResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getResultResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__getResult
#define SOAP_TYPE_PointerTo_ns1__getResult (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getResult(struct soap*, _ns1__getResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getResult(struct soap*, const char *, int, _ns1__getResult *const*, const char *);
SOAP_FMAC3 _ns1__getResult ** SOAP_FMAC4 soap_in_PointerTo_ns1__getResult(struct soap*, const char*, _ns1__getResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getResult(struct soap*, _ns1__getResult *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__getResult
#define soap_write_PointerTo_ns1__getResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getResult(soap, data),0) || soap_put_PointerTo_ns1__getResult(soap, data, "ns1:getResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__getResult ** SOAP_FMAC4 soap_get_PointerTo_ns1__getResult(struct soap*, _ns1__getResult **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getResult
#define soap_read_PointerTo_ns1__getResult(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__sendRequestResponse
#define SOAP_TYPE_PointerTo_ns1__sendRequestResponse (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__sendRequestResponse(struct soap*, _ns1__sendRequestResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__sendRequestResponse(struct soap*, const char *, int, _ns1__sendRequestResponse *const*, const char *);
SOAP_FMAC3 _ns1__sendRequestResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__sendRequestResponse(struct soap*, const char*, _ns1__sendRequestResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__sendRequestResponse(struct soap*, _ns1__sendRequestResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__sendRequestResponse
#define soap_write_PointerTo_ns1__sendRequestResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__sendRequestResponse(soap, data),0) || soap_put_PointerTo_ns1__sendRequestResponse(soap, data, "ns1:sendRequestResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__sendRequestResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__sendRequestResponse(struct soap*, _ns1__sendRequestResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__sendRequestResponse
#define soap_read_PointerTo_ns1__sendRequestResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__sendRequestResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__sendRequest
#define SOAP_TYPE_PointerTo_ns1__sendRequest (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__sendRequest(struct soap*, _ns1__sendRequest *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__sendRequest(struct soap*, const char *, int, _ns1__sendRequest *const*, const char *);
SOAP_FMAC3 _ns1__sendRequest ** SOAP_FMAC4 soap_in_PointerTo_ns1__sendRequest(struct soap*, const char*, _ns1__sendRequest **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__sendRequest(struct soap*, _ns1__sendRequest *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__sendRequest
#define soap_write_PointerTo_ns1__sendRequest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__sendRequest(soap, data),0) || soap_put_PointerTo_ns1__sendRequest(soap, data, "ns1:sendRequest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__sendRequest ** SOAP_FMAC4 soap_get_PointerTo_ns1__sendRequest(struct soap*, _ns1__sendRequest **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__sendRequest
#define soap_read_PointerTo_ns1__sendRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__sendRequest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__getLastDumpDateResponse
#define SOAP_TYPE_PointerTo_ns1__getLastDumpDateResponse (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getLastDumpDateResponse(struct soap*, _ns1__getLastDumpDateResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getLastDumpDateResponse(struct soap*, const char *, int, _ns1__getLastDumpDateResponse *const*, const char *);
SOAP_FMAC3 _ns1__getLastDumpDateResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__getLastDumpDateResponse(struct soap*, const char*, _ns1__getLastDumpDateResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getLastDumpDateResponse(struct soap*, _ns1__getLastDumpDateResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__getLastDumpDateResponse
#define soap_write_PointerTo_ns1__getLastDumpDateResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getLastDumpDateResponse(soap, data),0) || soap_put_PointerTo_ns1__getLastDumpDateResponse(soap, data, "ns1:getLastDumpDateResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__getLastDumpDateResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__getLastDumpDateResponse(struct soap*, _ns1__getLastDumpDateResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getLastDumpDateResponse
#define soap_read_PointerTo_ns1__getLastDumpDateResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getLastDumpDateResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__getLastDumpDate
#define SOAP_TYPE_PointerTo_ns1__getLastDumpDate (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getLastDumpDate(struct soap*, _ns1__getLastDumpDate *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getLastDumpDate(struct soap*, const char *, int, _ns1__getLastDumpDate *const*, const char *);
SOAP_FMAC3 _ns1__getLastDumpDate ** SOAP_FMAC4 soap_in_PointerTo_ns1__getLastDumpDate(struct soap*, const char*, _ns1__getLastDumpDate **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getLastDumpDate(struct soap*, _ns1__getLastDumpDate *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__getLastDumpDate
#define soap_write_PointerTo_ns1__getLastDumpDate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getLastDumpDate(soap, data),0) || soap_put_PointerTo_ns1__getLastDumpDate(soap, data, "ns1:getLastDumpDate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__getLastDumpDate ** SOAP_FMAC4 soap_get_PointerTo_ns1__getLastDumpDate(struct soap*, _ns1__getLastDumpDate **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getLastDumpDate
#define soap_read_PointerTo_ns1__getLastDumpDate(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getLastDumpDate(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToxsd__base64Binary
#define SOAP_TYPE_PointerToxsd__base64Binary (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__base64Binary(struct soap*, xsd__base64Binary *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__base64Binary(struct soap*, const char *, int, xsd__base64Binary *const*, const char *);
SOAP_FMAC3 xsd__base64Binary ** SOAP_FMAC4 soap_in_PointerToxsd__base64Binary(struct soap*, const char*, xsd__base64Binary **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__base64Binary(struct soap*, xsd__base64Binary *const*, const char*, const char*);

#ifndef soap_write_PointerToxsd__base64Binary
#define soap_write_PointerToxsd__base64Binary(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToxsd__base64Binary(soap, data),0) || soap_put_PointerToxsd__base64Binary(soap, data, "xsd:base64Binary", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__base64Binary ** SOAP_FMAC4 soap_get_PointerToxsd__base64Binary(struct soap*, xsd__base64Binary **, const char*, const char*);

#ifndef soap_read_PointerToxsd__base64Binary
#define soap_read_PointerToxsd__base64Binary(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxsd__base64Binary(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTounsignedByte
#define SOAP_TYPE_PointerTounsignedByte (10)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTounsignedByte(struct soap*, unsigned char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTounsignedByte(struct soap*, const char *, int, unsigned char *const*, const char *);
SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_in_PointerTounsignedByte(struct soap*, const char*, unsigned char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTounsignedByte(struct soap*, unsigned char *const*, const char*, const char*);

#ifndef soap_write_PointerTounsignedByte
#define soap_write_PointerTounsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTounsignedByte(soap, data),0) || soap_put_PointerTounsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_get_PointerTounsignedByte(struct soap*, unsigned char **, const char*, const char*);

#ifndef soap_read_PointerTounsignedByte
#define soap_read_PointerTounsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTounsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__QName(soap, data),0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_string(soap, data),0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

/* End of soapH.h */
